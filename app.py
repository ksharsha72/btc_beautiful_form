from flask import Flask, render_template, request, send_file, jsonify
from playwright.sync_api import sync_playwright
import os
import tempfile
from datetime import datetime

app = Flask(__name__)

@app.route('/')
def index():
    return render_template('form.html')

@app.route('/generate-pdf', methods=['POST'])
def generate_pdf():
    try:
        # Get HTML content from request
        html_content = request.json.get('html')
        
        # Add page break rules to HTML content
        html_content = html_content.replace(
            '<div class="section">',
            '<div class="section" style="page-break-inside: avoid;">'
        )
        
        # Create a temporary file to store the PDF
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        pdf_path = os.path.join(tempfile.gettempdir(), f'project_review_{timestamp}.pdf')
        
        # Generate PDF using Playwright
        with sync_playwright() as p:
            browser = p.chromium.launch()
            page = browser.new_page()
            
            # Add CSS for better page breaks
            html_content = html_content.replace('</head>',
                '''
                <style>
                    @media print {
                        .section { page-break-inside: avoid; }
                        table { page-break-inside: avoid; }
                        .field { page-break-inside: avoid; }
                        h1, h2, h3, h4, h5 { page-break-after: avoid; }
                        .container { page-break-before: avoid; }
                    }
                </style>
                </head>
                '''
            )
            
            page.set_content(html_content)
            
            # Configure PDF options with header and footer
            page.pdf(path=pdf_path, 
                    format="A4",
                    margin={
                        "top": "100px",
                        "bottom": "100px",
                        "left": "20mm",
                        "right": "20mm"
                    },
                    display_header_footer=True,
                    header_template="""
                        <div style="width: 100%; font-size: 10px; padding: 20px 40px; border-bottom: 1px solid #ddd;">
                            <div style="float: left;">Project Review Report</div>
                            <div style="float: right;">Generated on: """ + datetime.now().strftime("%Y-%m-%d %H:%M:%S") + """</div>
                        </div>
                    """,
                    footer_template="""
                        <div style="width: 100%; font-size: 10px; padding: 10px 40px; border-top: 1px solid #ddd;">
                            <div style="float: left;">Confidential Document</div>
                            <div style="text-align: center;">Page <span class="pageNumber"></span> of <span class="totalPages"></span></div>
                            <div style="float: right;">Generated by Project Review System</div>
                        </div>
                    """,
                    print_background=True)
            browser.close()
        
        # Send the PDF file
        return send_file(
            pdf_path,
            mimetype='application/pdf',
            as_attachment=True,
            download_name=f'project_review_{timestamp}.pdf'
        )
    except Exception as e:
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(debug=True, port=5001) 